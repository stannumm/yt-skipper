(()=>{var e={405:(e,t,r)=>{"use strict";r.r(t),r.d(t,{YoutubeTranscript:()=>p,YoutubeTranscriptDisabledError:()=>l,YoutubeTranscriptError:()=>s,YoutubeTranscriptNotAvailableError:()=>u,YoutubeTranscriptNotAvailableLanguageError:()=>d,YoutubeTranscriptTooManyRequestError:()=>i,YoutubeTranscriptVideoUnavailableError:()=>c});const n=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,a="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",o=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class s extends Error{constructor(e){super(`[YoutubeTranscript] ðŸš¨ ${e}`)}}class i extends s{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class c extends s{constructor(e){super(`The video is no longer available (${e})`)}}class l extends s{constructor(e){super(`Transcript is disabled on this video (${e})`)}}class u extends s{constructor(e){super(`No transcripts are available for this video (${e})`)}}class d extends s{constructor(e,t,r){super(`No transcripts are available in ${e} this video (${r}). Available languages: ${t.join(", ")}`)}}class p{static fetchTranscript(e,t){var r,n,s,p,g;return n=this,s=void 0,g=function*(){const n=this.retrieveVideoId(e),s=yield fetch(`https://www.youtube.com/watch?v=${n}`,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":a})}),p=yield s.text(),g=p.split('"captions":');if(g.length<=1){if(p.includes('class="g-recaptcha"'))throw new i;if(!p.includes('"playabilityStatus":'))throw new c(e);throw new l(e)}const h=null===(r=(()=>{try{return JSON.parse(g[1].split(',"videoDetails')[0].replace("\n",""))}catch(e){return}})())||void 0===r?void 0:r.playerCaptionsTracklistRenderer;if(!h)throw new l(e);if(!("captionTracks"in h))throw new u(e);if((null==t?void 0:t.lang)&&!h.captionTracks.some((e=>e.languageCode===(null==t?void 0:t.lang))))throw new d(null==t?void 0:t.lang,h.captionTracks.map((e=>e.languageCode)),e);const v=((null==t?void 0:t.lang)?h.captionTracks.find((e=>e.languageCode===(null==t?void 0:t.lang))):h.captionTracks[0]).baseUrl,b=yield fetch(v,{headers:Object.assign(Object.assign({},(null==t?void 0:t.lang)&&{"Accept-Language":t.lang}),{"User-Agent":a})});if(!b.ok)throw new u(e);return[...(yield b.text()).matchAll(o)].map((e=>{var r;return{text:e[3],duration:parseFloat(e[2]),offset:parseFloat(e[1]),lang:null!==(r=null==t?void 0:t.lang)&&void 0!==r?r:h.captionTracks[0].languageCode}}))},new((p=void 0)||(p=Promise))((function(e,t){function r(e){try{o(g.next(e))}catch(e){t(e)}}function a(e){try{o(g.throw(e))}catch(e){t(e)}}function o(t){var n;t.done?e(t.value):(n=t.value,n instanceof p?n:new p((function(e){e(n)}))).then(r,a)}o((g=g.apply(n,s||[])).next())}))}static retrieveVideoId(e){if(11===e.length)return e;const t=e.match(n);if(t&&t.length)return t[1];throw new s("Impossible to retrieve Youtube video ID.")}}}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,r),o.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};const{YoutubeTranscript:n}=r(405);window.TranscriptFetcher=class{static getVideoId(e){try{const t=new URL(e);return"www.youtube.com"===t.hostname||"youtube.com"===t.hostname?t.searchParams.get("v"):"youtu.be"===t.hostname?t.pathname.substring(1):null}catch(e){return console.error("Error parsing URL:",e),null}}static async fetchTranscript(e){try{return await n.fetchTranscript(e)}catch(e){throw console.error("Error fetching transcript:",e),e}}}})();